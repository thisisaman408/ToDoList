<!DOCTYPE html>
<html lang="en">
  <head>
    <meta charset="UTF-8" />
    <meta name="viewport" content="width=device-width, initial-scale=1.0" />
    <title>To Do List</title>
    <link
      href="https://cdn.jsdelivr.net/npm/bootstrap@5.3.3/dist/css/bootstrap.min.css"
      rel="stylesheet"
      crossorigin="anonymous"
    />
    <script
      src="https://cdn.jsdelivr.net/npm/bootstrap@5.3.3/dist/js/bootstrap.bundle.min.js"
      crossorigin="anonymous"
    ></script>
    <link rel="stylesheet" href="css/styles.css" />
    <script
      src="https://kit.fontawesome.com/0f45a40b89.js"
      crossorigin="anonymous"
    ></script>
  </head>
  <body>
    <div class="mainHead">
      <h1 class="day"><%= kindOfDay %></h1>
    </div>

    <div class="container">
      <ul class="list-group">
        <% for (let i = 0; i < newList.length; i++) { %>
        <li class="list-group-item listItem">
          <div class="d-flex justify-content-between align-items-center">
            <span class="todo-text"> <%= newList[i].name %></span>
            <span class="todo-date"> <%= newList[i].date %></span>
            <input
              type="text"
              class="edit-input form-control"
              value="<%= newList[i].name %>"
              style="display: none"
            />
            <div>
              <button
                class="editButton"
                onclick="editItem(this)"
                data-index="<%= i %>"
              >
                <i class="fa-solid fa-pen-to-square"></i>
              </button>

              <button class="confirmButton" onclick="confirmEdit(this)">
                <i class="fa-solid fa-square-check"></i>
              </button>

              <form class="deleteform" action="/delete" method="post">
                <input type="hidden" value="<%= i %>" name="index" />
                <button class="deleteButton" type="submit">
                  <i class="fa-solid fa-trash"></i>
                </button>
              </form>
            </div>
          </div>
        </li>
        <% } %>
      </ul>
      <div class="addButton">
        <form action="/" method="post">
          <input
            class="newItemText"
            type="text"
            name="newItem"
            placeholder="Add a new item"
          />
          <button
            type="submit"
            name="button"
            class="btn btn-lg btn-outline-primary addBtn"
          >
            Add
          </button>
          <br />
          <div class="dueDate d-flex align-items-center">
            <label class="month dateM" for="month">Due Date</label>
            <select
              class="dateM monthM monthN"
              name="month"
              id="month"
              required
            >
              <option value="0">January</option>
              <option value="1">February</option>
              <option value="2">March</option>
              <option value="3">April</option>
              <option value="4">May</option>
              <option value="5">June</option>
              <option value="6">July</option>
              <option value="7">August</option>
              <option value="8">September</option>
              <option value="9">October</option>
              <option value="10">November</option>
              <option value="11">December</option>
            </select>
            <label for="date"></label>
            <select class="dateM dateN monthN" name="date" id="date" required>
              <%for(let i = 1; i <= 31; i++) { %>
              <option value="<%= i %>"><%= i %></option>
              <% }%>
            </select>
          </div>
        </form>
      </div>
    </div>
    <script>
      document.addEventListener("DOMContentLoaded", () => {
        const monthSelect = document.getElementById("month");
        const dateSelect = document.getElementById("date");
        const today = new Date();
        const currentMonth = today.getMonth();
        const currentDate = today.getDate();
        function updateDateOptions() {
          const selectedMonth = parseInt(monthSelect.value, 10);
          dateSelect.innerHTML = "";
          const daysInMonth = new Date(
            today.getFullYear(),
            selectedMonth + 1,
            0
          ).getDate();
          for (let day = 1; day <= daysInMonth; day++) {
            const option = document.createElement("option");
            option.value = day;
            option.textContent = day;

            // Disable dates before today if current month is selected
            if (selectedMonth === currentMonth && day < currentDate) {
              option.disabled = true;
            }
            dateSelect.appendChild(option);
          }
        }

        // Update date options when month changes
        monthSelect.addEventListener("change", updateDateOptions);

        // Initialize options on load
        monthSelect.value = currentMonth;
        updateDateOptions();
      });

      function editItem(button) {
        const listItem = button.closest("li");
        const textElement = listItem.querySelector(".todo-text");
        const inputElement = listItem.querySelector(".edit-input");
        const confirmButton = listItem.querySelector(".confirmButton");

        // Enter edit mode
        textElement.style.display = "none";
        inputElement.style.display = "inline-block";
        inputElement.focus();
        button.style.display = "none";
        confirmButton.style.display = "inline-block";
      }

      function confirmEdit(button) {
        const listItem = button.closest("li");
        const textElement = listItem.querySelector(".todo-text");
        const inputElement = listItem.querySelector(".edit-input");
        const editButton = listItem.querySelector(".editButton");

        // Get the updated text from the input field
        const newValue = inputElement.value;
        textElement.textContent = newValue;

        // Exit edit mode
        textElement.style.display = "inline";
        inputElement.style.display = "none";
        button.style.display = "none"; // Hide confirm button
        editButton.style.display = "inline-block"; // Show edit button again

        // Get the index from the data attribute of the edit button
        const index = parseInt(
          button
            .closest("li")
            .querySelector(".editButton")
            .getAttribute("data-index"),
          10
        );
        console.log("Index to be sent:", index); // Debugging line
        updateTodoItem(index, newValue);
      }

      function updateTodoItem(index, newValue) {
        fetch(`/update`, {
          method: "POST",
          headers: {
            "Content-Type": "application/json",
          },
          body: JSON.stringify({
            index: parseInt(index, 10),
            newItem: newValue,
          }),
        })
          .then((response) => {
            // Check if the response is okay
            if (!response.ok) {
              throw new Error("Network response was not ok");
            }
            return response.json();
          })
          .then((data) => {
            console.log("Success:", data);
          })
          .catch((error) => {
            console.error("Error:", error);
          });
      }
    </script>
  </body>
</html>
